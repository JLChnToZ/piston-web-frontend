@import url('../node_modules/normalize.css/normalize.css');
@import url('../node_modules/98.css/dist/98.css');
@import url('../node_modules/@typopro/web-mononoki/TypoPRO-Mononoki.css');

::selection {
  background-color: navy;
  color: white;
}

html, body {
  width: 100%;
  height: 100%;
}
body {
  user-select: none;
  overflow: hidden;
}
.flex {
  display: flex;
}
.flex.horizontal {
  flex-direction: row;
}
.flex.horizontal.reverse {
  flex-direction: row-reverse;
}
.flex.vertical {
  flex-direction: column;
}
.flex.vertical.reverse {
  flex-direction: column-reverse;
}
.flex.nowrap {
  flex-wrap: nowrap;
}
.flex.wrap {
  flex-wrap: wrap;
}
.flex.wrap.reverse {
  flex-wrap: wrap-reverse;
}
.flex>.expand {
  flex: auto;
}
.flex>.fixed {
  flex: none;
}
.filled {
  width: 100%;
  height: 100%;
}
nav.flex.window>* {
  min-width: 0;
  margin: 2px;
}
.hidden, .flex.hidden {
  display: none;
}
.floating {
  position: fixed;
  top: 0;
  left: 0;
}
.field-row.align-right {
  justify-content: flex-end;
}

.window.reiszable {
  resize: both;
}
.window>.resize-handle {
  position: absolute;
  z-index: 10;
}
.window:not(.maximized)>.resize-handle.dir-ne,
.window:not(.maximized)>.resize-handle.dir-se,
.window:not(.maximized)>.resize-handle.dir-nw,
.window:not(.maximized)>.resize-handle.dir-sw {
  z-index: 15;
}
.window:not(.maximized)>.resize-handle.dir-e, .window:not(.maximized)>.resize-handle.dir-w {
  cursor: ew-resize;
  height: 100%;
}
.window:not(.maximized)>.resize-handle.dir-n, .window:not(.maximized)>.resize-handle.dir-s {
  cursor: ns-resize;
  width: 100%;
}
.window:not(.maximized)>.resize-handle.dir-ne, .window:not(.maximized)>.resize-handle.dir-sw {
  cursor: nesw-resize;
}
.window:not(.maximized)>.resize-handle.dir-nw, .window:not(.maximized)>.resize-handle.dir-se {
  cursor: nwse-resize;
}
.window:not(.maximized)>.resize-handle.dir-e, .window:not(.maximized)>.resize-handle.dir-ne, .window:not(.maximized)>.resize-handle.dir-se {
  right: 0;
}
.window:not(.maximized)>.resize-handle.dir-w, .window:not(.maximized)>.resize-handle.dir-nw, .window:not(.maximized)>.resize-handle.dir-sw {
  left: 0;
}
.window:not(.maximized)>.resize-handle.dir-n, .window:not(.maximized)>.resize-handle.dir-ne, .window:not(.maximized)>.resize-handle.dir-nw {
  top: 0;
}
.window:not(.maximized)>.resize-handle.dir-s, .window:not(.maximized)>.resize-handle.dir-se, .window:not(.maximized)>.resize-handle.dir-sw {
  bottom: 0;
}
.window:not(.maximized)>.resize-handle.dir-e,
.window:not(.maximized)>.resize-handle.dir-ne,
.window:not(.maximized)>.resize-handle.dir-se,
.window:not(.maximized)>.resize-handle.dir-w,
.window:not(.maximized)>.resize-handle.dir-nw,
.window:not(.maximized)>.resize-handle.dir-sw {
  width: 5px;
}
.window:not(.maximized)>.resize-handle.dir-n,
.window:not(.maximized)>.resize-handle.dir-ne,
.window:not(.maximized)>.resize-handle.dir-nw,
.window:not(.maximized)>.resize-handle.dir-s,
.window:not(.maximized)>.resize-handle.dir-se,
.window:not(.maximized)>.resize-handle.dir-sw {
  height: 5px;
}

.window .window-body.borderless {
  margin: 0;
}

.window>.window-body.borderless>textarea {
  min-width: 240px;
}

.window .title-bar + * {
  padding-top: 2px;
}

samp, pre, code, .monospace {
  font-family: 'TypoPRO Mononoki', 'Courier New', Courier, monospace;
}

.editor-container {
  overflow: hidden;
}

.main-container>* {
  flex: auto;
  margin: 0 !important;
}

.main-container>*.flex-fixed {
  position: initial !important;
  flex: none;
}

.hidden {
  position: fixed;
  width: 0;
  height: 0;
  top: -1em;
  left: -1em;
  overflow: hidden;
  pointer-events: none;
}

.flex>textarea.expand {
  resize: none;
  width: 100%;
  height: 100%;
}

@media (prefers-color-scheme: dark) {
  body {
    background: black;
    color: white;
  }
}

.title-bar-text {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.window:not(.dragging) {
  transition-property: width, height, transform;
  transition-duration: 0.25s;
}

@media (prefers-reduced-motion) {
  .window:not(.dragging) {
    transition: none;
  }
}

.window.maximized {
  transform: initial !important;
  position: fixed !important;
  top: 0 !important;
  left: 0 !important;
  right: 0 !important;
  bottom: 0 !important;
  width: 100% !important;
  height: 100% !important;
  padding: 0;
}

.window.minimized {
  width: 180px !important;
  height: fit-content !important;
  min-width: 180px !important;
  max-width: 180px !important;
  min-height: min-content !important;
}

.window.minimized>:not(.title-bar) {
  display: none;
}